# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: angiday REST API CI with Maven

on:
  push:

env:
  DATABASE_TEST_URL: jdbc:mysql://localhost:3306/test?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
  DATABASE_TEST_USERNAME: root
  DATABASE_TEST_PASSWORD: 123456

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B clean install --file pom.xml -DskipTests

  test:
    runs-on: ubuntu-latest
    needs:
      - build
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: 123456
        ports:
          - "3306:3306"
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run unit test
        run: mvn -f pom.xml test
